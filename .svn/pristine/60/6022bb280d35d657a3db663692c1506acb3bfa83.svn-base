<?php
/**
* /controller/api.php
*
* PHP Version 5
*/

/**
* The controller class for API
*
* @category Automation
* @package Roadmap
* @subpackage Controller
* @author Justin Leung <justin.leung@s2partnership.co.uk>
* @copyright 2016-2017 S2 Partnership Ltd.
* @version Release: 1.0
*/
class Api extends Controller
{
    /**
    * Pre-load method
    * Permission Control
    *
    * @return void
    */
    public function __construct()
    {
        parent::__construct();
    }

    /**
    *
    *
    * @return void
    */
    public function get_codebase_sprint($project_name, $sprint)
    {
        $this->render = false;
        if (strlen($sprint) < 1 || strlen($project_name) < 1) {
            return false;
        }
        $Code_Base_Model = new Code_Base_Model($this->db);
        prr($Code_Base_Model->getTicketsBySprint($project_name, $sprint));
    }
    
    /**
    *
    *
    * @return void
    */
    public function getJenkins($api_call = true)
    {
        $Automation_View_Model = new Automation_View_Model($this->db);
        $jenkins_data = $Automation_View_Model->getStatistics();
        $this->render = false;
        if ($api_call) {
            echo json_encode($jenkins_data);
        } else {
            return $jenkins_data;
        }
    }
    
    /**
    * Api call that save current bugability tickets
    *
    * @return void
    */
    public function getBugability($project_name = 'riskwise-2')
    {
        $this->Code_Base_Model = new Code_Base_Model($this->db);
        $this->Bugability_Model = new Bugability_Model($this->db);
        $MilestoneViewModel = new Milestone_View_Model($this->db);
        //curl request to codebase, get all open bug ticket
        $tickets_1 = $this->Code_Base_Model->get_code_base_bugability($project_name);
        $milestone = current(
            $MilestoneViewModel->get(
                array(),
                array('project_id' => Session::get('current_project_id')),
                "AND `project_name` = 'riskwise-2' AND `completed` = 0 AND `name` NOT IN ('On Hold', 'Unallocated') ORDER BY `start_date` ASC LIMIT 1"
            )
        );
        $milestone['name'] = urlencode($milestone['name']);
        $milestone['name'] = str_replace(',', '%2C', $milestone['name']);
        $milestone['name'] = str_replace('.', '%2E', $milestone['name']);
        $milestone['name'] = str_replace('-', '%2D', $milestone['name']);
        $tickets_2 = $this->Code_Base_Model->get_code_base_bugability($project_name, 'milestone:"' . $milestone['name'] . '"');
        //combine two array
        $tickets = $tickets_1 + $tickets_2;
        $this->Bugability_Model->save_open_bugability_ticket($tickets);
        prr('Bugability ticket has been imported');
        $this->render = false;
    }

}
